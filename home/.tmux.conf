# set scrollback history to 10000 (10k)
set -g history-limit 10000

bind C-Space copy-mode

# Set main-horizontal layout with main pane at 60% height
bind m "set-window-option main-pane-height 60; select-layout main-horizontal"

set -g default-terminal "screen-256color"

# Set zsh as the default shell
set-option -g default-shell "/bin/zsh"

# Start numbering at 1 instead of 0
set-option -g base-index 1
setw -g pane-base-index 1

# ------------
# Copy / Paste
# ------------
# Use reattach-to-user-namespace for macOS integration
set-option -g default-command "reattach-to-user-namespace -l zsh"

# use vim keybindings in copy mode
setw -g mode-keys vi

# Bindings for copy mode (updated to use copy-mode-vi table)
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Faster key repetition
set -s escape-time 0

# Name and create a new window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"

# Split window using current pane's path
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Reload config file
# bind r source-file ~/.tmux.conf

# ----------------------
# Set pane and message colors
# ----------------------
set -g pane-border-style fg=color238
set -g pane-active-border-style fg=color238

set -g message-style bg=black,fg=brightred

# ----------------------
# Status Bar
# ----------------------
set-option -g status on
set -g status-interval 5
set -g status-justify left
set-option -g status-position top

set -g status-style bg=colour235,fg=yellow,dim

set -g window-status-style bg=colour236,fg=brightblue,dim
set -g window-status-current-style bg=colour236,fg=brightred,bold

set -g status-left-length 70
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p"

bind c new-window -c "#{pane_current_path}"

bind r switch-client -T resize

# In resize mode, h/j/k/l resize the pane
bind -T resize h resize-pane -L 5\; switch-client -T resize
bind -T resize j resize-pane -D 5\; switch-client -T resize
bind -T resize k resize-pane -U 5\; switch-client -T resize
bind -T resize l resize-pane -R 5\; switch-client -T resize

# Exit resize mode by pressing q or Escape
bind -T resize q switch-client -T root
bind -T resize Escape switch-client -T root

# ----------------------
# Plugins
# ----------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'schasse/tmux-jump'
# Uncomment if you want automatic restoration on tmux start:
# set -g @continuum-restore 'on'

set -g @jump-key 'j'

# ----------------------
# Smart pane switching with awareness of vim/emacs/spacemacs splits
# ----------------------
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

# ----------------------
# Resize panes using vim-like keys (h: left, j: down, k: up, l: right)
# ----------------------
set -g mouse on

# Use tmux titles
set-option -g set-titles on

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

